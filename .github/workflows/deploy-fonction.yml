name: Deploy Firebase Functions and Hosting

# Esegui questo workflow OGNI VOLTA che viene fatto un push sul branch "main"
on:
  push:
    branches:
      - main

jobs:
  # ---------------------------------------------
  # JOB 1: Deploy Firebase Functions (Backend)
  # ---------------------------------------------
  deploy_functions:
    name: Deploy Functions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js v18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Install Dependencies
        run: cd functions && npm install

      - name: Deploy to Firebase Functions
        # Usa il service account JSON tramite variabile d'ambiente (più sicuro e affidabile)
        run: firebase deploy --only functions --token "$FIREBASE_SERVICE_ACCOUNT_MARCATEMPO_TCS"
        env:
          FIREBASE_SERVICE_ACCOUNT_MARCATEMPO_TCS: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_MARCATEMPO_TCS }}
        # CRITICO: Continua anche se il deploy delle Funzioni fallisce
        continue-on-error: true

  # ---------------------------------------------
  # JOB 2: Deploy Firebase Hosting (Frontend React)
  # ---------------------------------------------
  deploy_hosting:
    name: Deploy Hosting (Frontend)
    runs-on: ubuntu-latest
    # Esegue solo se il push non è stato fatto dal bot per prevenire il loop
    if: ${{ github.actor != 'github-actions[bot]' }}
    needs: deploy_functions # Esegue dopo il job delle funzioni (indipendentemente dal risultato)

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install dependencies and build
        run: npm ci && npm run build

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          # Il service account per l'autenticazione è fornito come input all'azione
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_MARCATEMPO_TCS }}'
          channelId: live
          projectId: marcatempo-tcs